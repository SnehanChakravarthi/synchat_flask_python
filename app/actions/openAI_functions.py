from openai import OpenAI
import base64
import os

client = OpenAI()


def get_completion(message):
    """
    Get completion from OpenAI chat model.

    Args:
        message (str): The user's message.

    Returns:
        str: The completion generated by the chat model.
    """
    try:
        completion = client.chat.completions.create(
            model="gpt-3.5-turbo-1106",
            messages=[{"role": "user", "content": message}],
        )
    except Exception as e:
        print(f"An error occurred while getting completion: {e}")
        return None

    return completion


def get_text_from_audio(audio):
    """
    Transcribes the text from an audio file.

    Args:
        audio (str): The path to the audio file.

    Returns:
        str: The transcribed text.
    """
    with open(audio, "rb") as audio_file:
        transcript = client.audio.transcriptions.create(
            model="whisper-1", file=audio_file
        )
    return transcript


def get_text_from_image(image_file_path, caption=None):
    # Set a default caption if none is provided
    if not caption:
        caption = "Whatâ€™s in this image?"
    if not os.path.exists(image_file_path):
        print(f"Image file not found at {image_file_path}")
        return None

    # Read the image file and convert to base64
    with open(image_file_path, "rb") as image_file:
        base64_image = base64.b64encode(image_file.read()).decode("utf-8")

    try:
        response = client.chat.completions.create(
            model="gpt-4-vision-preview",
            messages=[
                {
                    "role": "user",
                    "content": [
                        {"type": "text", "text": caption},
                        {
                            "type": "image_url",
                            "image_url": {
                                "url": f"data:image/jpeg;base64,{base64_image}"
                            },
                        },
                    ],
                }
            ],
            max_tokens=300,
        )
    except Exception as e:
        print(f"An error occurred while getting completion: {e}")
        return None

    return response
